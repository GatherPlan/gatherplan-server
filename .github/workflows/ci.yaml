name: Build and Deploy to GKE

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "test"
        required: false
        type: string

#on:
#  push:
#    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GAR_LOCATION: us-east1 # TODO: update region of the Artifact Registry
  REPOSITORY: gatherplan # TODO: update to Artifact Registry docker repository
  IMAGE: gatherplan-server
  IMG_TAG: v${GITHUB_SHA::7}
  HELM_CHART_VALUES: gatherplan-server/values-overriding.yaml

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build
        run: |-
          ./gradlew build
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:${{ env.IMG_TAG }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Push the Docker image to Google Artifact Registry
      - name: Publish
        run: |-
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:${{ env.IMG_TAG }}"


      - name: Create GITHUB_SHA_SHORT
        id: meta
        run: |
          echo "github_sha=${{ env.IMG_TAG }}" >> $GITHUB_OUTPUT

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: ppippi-dev/helm-chart
          token: ${{ secrets.PPI_GITHUB_TOKEN }}

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: ${{ env.HELM_CHART_VALUES }}
          propertyPath: 'image.tag'
          value: ${{ steps.meta.outputs.github_sha }}
          repository: ppippi-dev/helm-chart
          branch: main
          targetBranch: main
          createPR: false
          message: 'Update Image Version to ${{ steps.meta.outputs.github_sha }}'
          token: ${{ secrets.PPI_GITHUB_TOKEN }}

      - uses: actions/checkout@v2
      - name: Sync ArgoCD Application
        uses: omegion/argocd-actions@v1
        with:
          address: "argocd.gatherplan.site"
          token: ${{ secrets.ARGOCD_TOKEN }}
          action: sync
          appName: "gatherplan-server"
